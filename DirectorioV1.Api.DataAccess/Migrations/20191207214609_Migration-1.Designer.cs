// <auto-generated />
using System;
using DirectorioV1.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DirectorioV1.Api.DataAccess.Migrations
{
    [DbContext(typeof(DirectorioV1DBContext))]
    [Migration("20191207214609_Migration-1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Barrios2MunicipiosEntity", b =>
                {
                    b.Property<int>("Barrio_Id");

                    b.Property<int>("Municipio_Id");

                    b.HasKey("Barrio_Id", "Municipio_Id");

                    b.HasIndex("Municipio_Id");

                    b.ToTable("Barrios2Municipios");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.BarriosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Codigo_Postal");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<int?>("MunicipiosId");

                    b.HasKey("Id");

                    b.HasIndex("MunicipiosId");

                    b.ToTable("Barrios");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.CategoriasEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Ciudades2DepartamentosEntity", b =>
                {
                    b.Property<int>("Ciudad_Id");

                    b.Property<int>("Departamento_Id");

                    b.HasKey("Ciudad_Id", "Departamento_Id");

                    b.HasIndex("Departamento_Id");

                    b.ToTable("Ciudades2Departamentos");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.CiudadesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Codigo_Postal");

                    b.Property<int?>("DepartamentosId");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentosId");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Clientes2DireccionesEntity", b =>
                {
                    b.Property<int>("Cliente_Id");

                    b.Property<int>("Direccion_Id");

                    b.HasKey("Cliente_Id", "Direccion_Id");

                    b.HasIndex("Direccion_Id");

                    b.ToTable("Clientes2Direcciones");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesDireccionesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Barrio_Id");

                    b.Property<int>("Ciudad_Id");

                    b.Property<int>("Departamento_Id");

                    b.Property<string>("Direccion_A");

                    b.Property<string>("Direccion_B");

                    b.Property<string>("Direccion_Compuesta");

                    b.Property<string>("Direccion_Observacion");

                    b.Property<string>("Direccion_Tipo_A");

                    b.Property<string>("Direccion_Tipo_B");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<int>("Municipio_Id");

                    b.Property<int>("Pais_Id");

                    b.Property<bool>("Servicio_Domicilio");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("ClientesDirecciones");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_Id");

                    b.Property<int?>("CategoriasId");

                    b.Property<int?>("ClientesDireccionesId");

                    b.Property<string>("Correo");

                    b.Property<string>("Documento");

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("Fecha_Creacion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Tipo_Documento");

                    b.HasKey("Id");

                    b.HasIndex("CategoriasId");

                    b.HasIndex("ClientesDireccionesId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.DepartamentosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Codigo_Postal");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<int?>("PaisesId");

                    b.HasKey("Id");

                    b.HasIndex("PaisesId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Municipios2CiudadesEntity", b =>
                {
                    b.Property<int>("Ciudad_Id");

                    b.Property<int>("Muncipio_Id");

                    b.HasKey("Ciudad_Id", "Muncipio_Id");

                    b.HasIndex("Muncipio_Id");

                    b.ToTable("Municipios2Ciudades");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.MunicipiosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CiudadesId");

                    b.Property<string>("Codigo");

                    b.Property<string>("Codigo_Postal");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.HasKey("Id");

                    b.HasIndex("CiudadesId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Paises2DepartamentosEntity", b =>
                {
                    b.Property<int>("Pais_Id");

                    b.Property<int>("Departamento_Id");

                    b.HasKey("Pais_Id", "Departamento_Id");

                    b.HasIndex("Departamento_Id");

                    b.ToTable("Paises2Departamentos");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.PaisesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Codigo_Postal");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.UsuariosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("Contrasena");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Barrios2MunicipiosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.BarriosEntity", "Barrios")
                        .WithMany("Barrios2Municipios")
                        .HasForeignKey("Barrio_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.MunicipiosEntity", "Municipios")
                        .WithMany("Barrios2Municipios")
                        .HasForeignKey("Municipio_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.BarriosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.MunicipiosEntity", "Municipios")
                        .WithMany()
                        .HasForeignKey("MunicipiosId");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Ciudades2DepartamentosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.CiudadesEntity", "Ciudades")
                        .WithMany("Ciudades2Departamentos")
                        .HasForeignKey("Ciudad_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.DepartamentosEntity", "Departamentos")
                        .WithMany("Ciudades2Departamentos")
                        .HasForeignKey("Departamento_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.CiudadesEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.DepartamentosEntity", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentosId");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Clientes2DireccionesEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesEntity", "Cliente")
                        .WithMany("Clientes2Direcciones")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesDireccionesEntity", "ClienteDirecciones")
                        .WithMany("Clientes2Direcciones")
                        .HasForeignKey("Direccion_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.CategoriasEntity", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriasId");

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.ClientesDireccionesEntity", "ClientesDirecciones")
                        .WithMany()
                        .HasForeignKey("ClientesDireccionesId");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.DepartamentosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.PaisesEntity", "Paises")
                        .WithMany()
                        .HasForeignKey("PaisesId");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Municipios2CiudadesEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.CiudadesEntity", "Ciudades")
                        .WithMany("Municipios2Ciudades")
                        .HasForeignKey("Ciudad_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.MunicipiosEntity", "Municipios")
                        .WithMany("Municipios2Ciudades")
                        .HasForeignKey("Muncipio_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.MunicipiosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.CiudadesEntity", "Ciudades")
                        .WithMany()
                        .HasForeignKey("CiudadesId");
                });

            modelBuilder.Entity("DirectorioV1.Api.DataAccess.Contracts.Entities.Paises2DepartamentosEntity", b =>
                {
                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.DepartamentosEntity", "Departamentos")
                        .WithMany("Paises2Departamentos")
                        .HasForeignKey("Departamento_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DirectorioV1.Api.DataAccess.Contracts.Entities.PaisesEntity", "Paises")
                        .WithMany("Paises2Departamentos")
                        .HasForeignKey("Pais_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
